---
- name: Create Samba share directories
  file:
    path: "{{ config.paths.mount }}/{{ item.name }}"
    state: directory
    mode: 0777
  loop: "{{ samba_shares }}"

- name: Process backend specific tasks
  include_tasks: "{{ config.be.name }}/main.yml"

- name: Selinux - Allow exporting everything
  seboolean:
    name: samba_export_all_rw
    state: yes
    persistent: yes

- name: Check firewall
  command: firewall-cmd --state
  failed_when: false
  register: fwd_state

- name: Configure firewall
  when: fwd_state.stdout == "running"
  block:
    - name: Enable firewall for samba
      firewalld:
        service: samba
        permanent: yes
        state: enabled

    - name: Reload firewall
      command: firewall-cmd --reload

- name: Create fresh directory /etc/samba/smb.shares to contain share definition
  block:
    - file:
        path: "{{ config.paths.samba.etc }}/smb.shares"
        state: absent
    - file:
        path: "{{ config.paths.samba.etc }}/smb.shares"
        state: directory
        mode: '0755'

- name: Create smb.conf
  template:
    src: smb.conf.j2
    dest: "{{ config.paths.samba.etc }}/smb.conf"
    owner: root
    group: root
    mode: '0644'

- name: Create the share configuration using backend
  include_role:
    name: 'sit.{{ config.be.name }}'
    tasks_from: new_share.yml
  vars:
    name: "{{ item.name }}"
    path: "{{ config.paths.mount }}/{{ item.name }}"
    mode: "0777"
    file: "{{ config.paths.samba.etc }}/smb.shares/{{ item.name }}.conf"
    volume: "{{ item }}"
  with_items: "{{ samba_shares }}"

- name: Include share configuration into smb.conf
  lineinfile:
    path: "{{ config.paths.samba.etc }}/smb.conf"
    line: "include = {{ config.paths.samba.etc }}/smb.shares/{{ item.name }}.conf"
    insertafter: EOF
  with_items: "{{ samba_shares }}"

- name: Update selinux contexts
  command: restorecon -R "{{ config.paths.mount }}/{{ item.name }}"
  loop: "{{ samba_shares }}"

---

# This determines the properties of each OS so that it can be used for better
# conditionals and reduce duplication in some places.
os_info:
  centos8:
    family: redhat
    distro: centos
    version: 8

  centos9:
    family: redhat
    distro: centos
    version: 9

# Vagrant/VM global settings
vagrant:
  # Vagrant image to use per OS
  images:
    centos8: generic/centos8s
    centos9: generic/centos9s

  # Available networks for the VMs
  networks:
    private: 192.168.122.0/24
    public: 192.168.123.0/24

#  # Storage pool to use for the virtual disks (optional)
#  pool: data

misc:
  host:
    statedir: "/tmp"
    configdir: "/tmp/config"

# List of tests to run
tests:
  - sit-test-cases

provisioners:
  vagrant:
    images:
      centos8: generic/centos8s
      centos9: generic/centos9s

    networks:
      private: 192.168.122.0/24
      public: 192.168.123.0/24

#    # Storage pool to use for the virtual disks (optional)
#    pool: data

# The `environments` object contains one entry for each defined backend,
# which specifies the types of VMs to create, the amount of each one, and
# the resources they need.
#
# Each environment has the following properties:
#
#   os: (optional, default: `use_distro` if defined, 'centos9' otherwise)
#     Default OS installed on all hosts of the environment. This value can
#     be overriden by specific VM type definitions.
#
#   cpus: (required)
#     Default number of CPUs to assign to each VM. This value can be
#     overridden by specific VM type definitions.
#
#   memory: (required)
#     Default amount of memory (in MiB) assigned to each VM. This value
#     can be overridden by specific VM type definitions.
#
#   data: (optional, default: {})
#     This field contains any extra data specific to the environment that
#     is needed to complete the installation (this data is used only by
#     tasks specific for this environment). It can contain anything, the
#     structure is free.
#
#   nodes: (required)
#     This field contains the types of VMs to create. The name of the type
#     will be suffixed with an incremental number (starting at 0) to form
#     the name of the VMs of each type.
#
# Each defined node type has the following properties:
#
#   os: (optional, default: the value of `os` in the environment)
#     OS installed on this VM type.
#
#   instances: (optional, default: 1)
#     Defines how many VMs of this type will be created.
#
#   cpus: (optional, default: the value of `cpus` in the environment)
#     Number of CPUs for this specific VM type.
#
#   memory: (optional, default: the value of `memory` in the environment)
#     Amount of memory for this specific VM type.
#
#   disks: (optional, default: [])
#     List of additional disks for this type of VM (besides the system
#     disk). For each disk, only the size (in GiB) is specified.
#
#   networks: (optional, default: {})
#     This field enumerates the networks to connect to the VMs of this
#     type. The networks are referenced using the name previously defined
#     in `vagrant.networks`, and a host number for each one must be
#     provided. The actual IP address will be computed combining the
#     defined network with the host number.
#
#   ctdb: (optional, default: {})
#     This field is similar to the `networks` field but defines virtual
#     IPs used by CTDB.
#
#   groups: (required)
#     List of ansible group names where the VMs of this type will be
#     assigned to.
#
environments:
  glusterfs:
    cpus: 2
    memory: 1024

    nodes:
      setup:
        networks:
          private: 200
        groups: [admin]
        os: centos8

      client:
        networks:
          public: 5
        groups: [clients]

      storage:
        instances: 2
        disks: [10, 10, 10]
        networks:
          private: 100
          public: 100
        ctdb:
          public: 10
        groups: [cluster]
        os: centos8

  xfs:
    cpus: 2
    memory: 1024

    nodes:
      setup:
        networks:
          private: 200
        groups: [admin]

      storage:
        disks: [10]
        networks:
          private: 100
          public: 100
        ctdb:
          public: 10
        groups: [cluster]

      client:
        networks:
          public: 5
        groups: [clients]

  cephfs:
    cpus: 2
    memory: 1024

    data:
      branch: main

    nodes:
      setup:
        networks:
          private: 200
        groups: [admin]

      storage:
        instances: 3
        disks: [10, 10, 10]
        networks:
          private: 100
          public: 100
        ctdb:
          public: 10
        groups: [cluster]

      client:
        networks:
          public: 5
        groups: [clients]

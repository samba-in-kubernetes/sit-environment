---
- name: Check for required variables
  block:
    - fail:
        msg: "Please provide required variable: ctdb_network_private_interfaces"
      when: ctdb_network_private_interfaces is undefined
    - fail:
        msg: "Please provide these required variable: ctdb_network_public_interfaces"
      when: ctdb_network_public_interfaces is undefined
    - fail:
        msg: "Please provide these required variable: ctdb_network_public_interface_subnet_mask"
      when: ctdb_network_public_interface_subnet_mask is undefined
    - fail:
        msg: "Please provide these required variable: ctdb_network_public_interface_name"
      when: ctdb_network_public_interface_name is undefined
    - fail:
        msg: "Please provide these required variable: ctdb_cluster_volume"
      when: ctdb_cluster_volume is undefined
    - fail:
        msg: "Please provide these required variable: ctdb_cluster_replica_count"
      when: ctdb_cluster_replica_count is undefined

- name: Process filesystem/distro-dependent tasks
  include_tasks: "{{ include_file }}"
  with_first_found:
    - files:
      - "{{ filesystem }}.{{ ansible_os_family }}.yml"
      - "{{ filesystem }}.{{ distro.actions_file }}"
      - "{{ filesystem }}.yml"
      skip: True
  loop_control:
    loop_var: include_file

- name: Add ctdb package
  yum:
    name: ctdb
    state: present

- name: Add ctdb rules to firewalld
  firewalld:
    service: ctdb
    permanent: yes
    state: enabled

- name: Add cluster lock to ctdb.conf
  lineinfile:
    dest: /etc/ctdb/ctdb.conf
    line: "\tcluster lock = /ctdb/lock/cluster.lock"
    regexp: "cluster lock"
    insertafter: '\[cluster\]'

- name: Enable check consistency of databases during startup
  command: '/bin/ctdb event script enable legacy 00.ctdb'

- name: Enable check consistency of databases during startup
  command: '/bin/ctdb event script enable legacy 01.reclock'

- name: Enable monitor system resources
  command: '/bin/ctdb event script enable legacy 05.system'

- name: Enable network interface management by ctdb
  command: '/bin/ctdb event script enable legacy 10.interface'

- name: Enable samba management by ctdb
  command: '/bin/ctdb event script enable legacy 50.samba'

- name: Restart ctdb
  service: name=ctdb state=restarted enabled=yes

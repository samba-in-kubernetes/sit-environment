# -*- mode: ruby -*-
# vi: set ft=ruby :
#

Vagrant.configure("2") do |config|
    config.ssh.insert_key = false
    config.vm.synced_folder '.', '/vagrant', disabled: true
    config.vm.provider :libvirt do |v|
        # We can not use qemu_use_session universally. See section "Upgrade/compatibility impact"
        # from the following Fedora doc:
        # https://fedoraproject.org/wiki/Changes/Vagrant_2.2_with_QEMU_Session
        v.qemu_use_session = false

        # change cpu mode to passthrough as workaround for problems in the ci,
        # refer to bugs:
        # https://bugzilla.redhat.com/show_bug.cgi?id=1467599
        # https://bugzilla.redhat.com/show_bug.cgi?id=1386223#c10
        # vagrant-libvirt/vagrant-libvirt#667
        # taken from:
        # https://github.com/heketi/heketi/pull/1008
        v.cpu_mode = 'host-passthrough'
    end
{% for host in data.hosts %}
    {%- set node = config.nodes[host] %}
    {%- set vm_idx = loop.index0 +%}
    config.vm.define "{{ host }}" do |node|
        node.vm.box = "{{ config.os[data.os].vagrant.image }}"
        node.vm.hostname = "{{ host }}"
    {%- for net in node.networks +%}
        node.vm.network :private_network, ip: "{{ node.networks[net] }}"
    {%- endfor +%}
        node.vm.provider :virtualbox do |vb|
    {%- for size in node.disks +%}
            vb.customize [ "createhd", "--filename", "disk-{{ vm_idx }}{{ loop.index0 }}.vdi", "--size", {{ size * 1024 }} ]
            vb.customize [ "storageattach", :id, "--storagectl", "SATA Controller", "--port", {{ loop.index0 + 3 }}, "--device", 0, "--type", "hdd", "--medium", "disk-{{ vm_idx }}{{ loop.index0 }}.vdi" ]
    {%- endfor +%}
            vb.memory = {{ node.memory }}
            vb.cpus = {{ node.cpus }}
        end
        node.vm.provider :libvirt do  |lv|
    {%- if config.os[data.os].vagrant.pool is defined +%}
            lv.storage_pool_name = "{{ config.os[data.os].vagrant.pool }}"
    {%- endif +%}
    {%- for size in node.disks +%}
            lv.storage :file, :device => "vd{{ "bcdefghijklmnopqrstuvwxyz"[loop.index0] }}", :path => "disk-{{ vm_idx }}{{ loop.index0 }}.disk", :size => '{{ size }}G'
    {%- endfor +%}
            lv.memory = {{ node.memory }}
            lv.cpus = {{ node.cpus }}
        end
    {%- if loop.last +%}

      # Run a no-op playbook to create the inventory file.
      # Based on that, one can run ansible without vagrant.
        node.vm.provision "no-op", type:'ansible' do |ansible|
            ansible.playbook = "no-op-playbook.yml"
            ansible.groups = {
        {%- for group in config.groups +%}
                "{{ group }}" => {{ config.groups[group] | to_json }},
        {%- endfor +%}
            }
        end
    {%- endif +%}
    end
{% endfor %}
end

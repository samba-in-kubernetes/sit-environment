---
config:
  os:
  {%- for os_name in settings.os_info +%}
    {{ os_name }}:
      family: "{{ settings.os_info[os_name].family }}"
      distro: "{{ settings.os_info[os_name].distro }}"
      version: "{{ settings.os_info[os_name].version }}"
      includes:
        - "{{ settings.os_info[os_name].distro }}{{ settings.os_info[os_name].version}}.yml"
        - "{{ settings.os_info[os_name].distro }}.yml"
        - "{{ settings.os_info[os_name].family }}.yml"
  {%- endfor +%}

  be:
    name: "{{ be }}"
    variant: "{{ variant }}"

{%- if settings.environments[be].domain is defined +%}
  domain: "{{ settings.environments[be].domain }}"
{%- endif +%}

  data: {{ settings.environments[be].data | default({}) }}

  paths: {{ settings.paths }}

  accounts:
  {%- for name in settings.accounts | default({}) +%}
    {{ name }}:
      groups:
    {%- for group in settings.accounts[name].groups | default({}) +%}
      {%- set acct = settings.accounts[name].groups[group] +%}
      {%- for idx in range(acct.instances | default(1)) +%}
        {%- set group_name = group +%}
        {%- if acct.instances is defined +%}
          {%- set group_name = group ~ (idx + 1) +%}
        {%- endif +%}
        {{ group_name }}: {{ acct.gid + idx }}
      {%- endfor +%}
    {%- endfor +%}
      users:
    {%- for user in settings.accounts[name].users | default({}) +%}
      {%- set acct = settings.accounts[name].users[user] +%}
      {%- for idx in range(acct.instances | default(1)) +%}
        {%- set user_name = user +%}
        {%- if acct.instances is defined +%}
          {%- set user_name = user ~ (idx + 1) +%}
        {%- endif +%}
        {{ user_name }}:
          uid: {{ acct.uid + idx }}
          {%- if acct.primary_group is defined +%}
          primary_group: {{ acct.primary_group }}
          {%- endif +%}
          password: {{ acct.password | default(user_name) }}
          {%- if acct.comment is defined +%}
          comment: {{ acct.comment }}
          {%- endif +%}
          {%- if acct.groups | default(false) +%}
          groups:
            {%- for group in acct.groups | default([]) +%}
              {%- if settings.accounts[name].groups[group].instances is defined +%}
                {%- for idx in range(settings.accounts[name].groups[group].instances) +%}
            - {{ group }}{{ idx + 1}}
                {%- endfor +%}
              {%- else +%}
            - {{ group }}
              {%- endif +%}
            {%- endfor +%}
          {%- endif +%}
          samba: {{ acct.samba | default('false') }}
      {%- endfor +%}
    {%- endfor +%}
  {%- endfor +%}

  tests: {{ settings.tests }}

  samba: {{ settings.environments[be].samba | default('true') }}

  provisioners:
  {%- for prov in settings.environments[be].nodes | dict2items | map(attribute='value.provisioner', default='vagrant') | unique +%}
    {{ prov }}:
    {%- for item in settings.provisioners[prov] | default({}) +%}
      {{ item }}: {{ settings.provisioners[prov][item] }}
    {%- endfor +%}
      hosts:
      {%- for name in settings.environments[be].nodes +%}
        {%- set data = settings.environments[be].nodes[name] +%}
        {%- if data.provisioner | default(settings.environments[be].provisioner | default('vagrant')) == prov +%}
        {%- for idx in range(data.instances | default(1)) +%}
        - {{ name }}{{ idx }}
        {%- endfor +%}
        {%- endif +%}
      {%- endfor +%}
  {%- endfor +%}

{%- set total_mem = max_memory * ((memory | default(settings.resources.memory | default(50))) | int) / 100 +%}
{%- set total_cpu = max_cpu * ((cpu | default(settings.resources.cpu | default(100))) | int) / 100 +%}
{%- set extra_mem = 0 +%}
{%- set extra_cpu = 0 +%}
{%- set base_mem = [] +%}
{%- set base_cpu = [] +%}
{%- set weight_mem = [] +%}
{%- set weight_cpu = [] +%}
{%- for name in settings.environments[be].nodes +%}
{%-   set data = settings.environments[be].nodes[name] +%}
{%-   set count = data.instances | default(1) +%}
{%-   set _ = base_mem.append(count * (data.memory | default(settings.environments[be].memory))) +%}
{%-   set _ = base_cpu.append(count * (data.cpus | default(settings.environments[be].cpus))) +%}
{%-   set _ = weight_mem.append(count * (data.memory_weight | default(1))) +%}
{%-   set _ = weight_cpu.append(count * (data.cpu_weight | default(1))) +%}
{%- endfor +%}
{%- set base_mem = base_mem | sum +%}
{%- set base_cpu = base_cpu | sum +%}
{%- set weight_mem = weight_mem | sum +%}
{%- set weight_cpu = weight_cpu | sum +%}
{%- if weight_mem > 0 +%}
{%-   set extra_mem = ([ total_mem - base_mem, 0] | max) / weight_mem / 1024 +%}
{%- endif +%}
{%- if weight_cpu > 0 +%}
{%-   set extra_cpu = ([ total_cpu - base_cpu, 0] | max) / weight_cpu +%}
{%- endif +%}

  nodes:
  {%- for name in settings.environments[be].nodes +%}
    {%- set data = settings.environments[be].nodes[name] +%}
    {%- set prov = data.provisioner | default(settings.environments[be].provisioner | default('vagrant')) +%}
    {%- for idx in range(data.instances | default(1)) +%}
    {{ name }}{{ idx }}:
      groups: {{ data.groups }}
      provisioner: {{ prov }}
      os: {{ data.os | default(settings.environments[be].os | default(os)) }}
      cpus: {{ (data.cpus | default(settings.environments[be].cpus)) + ((extra_cpu * (data.cpu_weight | default(1))) | int) }}
      memory: {{ (data.memory | default(settings.environments[be].memory)) + 1024 * ((extra_mem * (data.memory_weight | default(1))) | int) }}
      disks: {{ data.disks | default([]) }}
      networks:
      {%- for net in data.networks | default({}) +%}
        {{ net }}: {{ settings.provisioners[prov].networks[net] | ansible.utils.ipaddr(data.networks[net] + idx) | ansible.utils.ipaddr('address') }}
      {%- endfor +%}
      ctdb:
      {%- for net in data.ctdb | default({}) +%}
        {{ net }}: {{ settings.provisioners[prov].networks[net] | ansible.utils.ipaddr(data.ctdb[net] + idx) | ansible.utils.ipaddr('address') }}
      {%- endfor +%}
      accounts: {{ data.accounts | default([]) }}
    {%- endfor +%}
  {%- endfor +%}

  groups:
  {%- for group in settings.environments[be].nodes.values() | map(attribute='groups') | flatten | unique | list +%}
    {{ group }}:
    {%- for host in settings.environments[be].nodes | dict2items | selectattr('value.groups', 'contains', group) | map(attribute='key') | list +%}
      {%- for idx in range(settings.environments[be].nodes[host].instances | default(1)) +%}
      - {{ host }}{{ idx }}
      {%- endfor +%}
    {%- endfor +%}
  {%- endfor +%}

  statedir: "{{ settings.misc.host.statedir }}/sit_statedump"
  configdir: "{{ settings.misc.host.configdir }}"

  install:
    samba:
      repo:
        url: {{ settings.install.samba.repo.url | default('https://artifacts.ci.centos.org/samba/pkgs/master/centos/samba-nightly-master.repo') }}
